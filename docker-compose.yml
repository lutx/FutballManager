version: '3.8'

services:
  # Main application
  app:
    build:
      context: .
      target: production
    ports:
      - "8000:8000"
    environment:
      - FLASK_ENV=production
      - SECRET_KEY=${SECRET_KEY}
      - DATABASE_URL=postgresql://football_user:${DB_PASSWORD}@db:5432/football_db
      - REDIS_URL=redis://redis:6379/0
      - WTF_CSRF_SECRET_KEY=${CSRF_SECRET_KEY}
    volumes:
      - app_logs:/app/logs
      - app_uploads:/app/static/uploads
    depends_on:
      - db
      - redis
    restart: unless-stopped
    networks:
      - football_network

  # PostgreSQL Database
  db:
    image: postgres:15
    environment:
      - POSTGRES_DB=football_db
      - POSTGRES_USER=football_user
      - POSTGRES_PASSWORD=${DB_PASSWORD}
    volumes:
      - postgres_data:/var/lib/postgresql/data
      - ./init_db.sql:/docker-entrypoint-initdb.d/init_db.sql
    ports:
      - "5432:5432"
    restart: unless-stopped
    networks:
      - football_network
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U football_user -d football_db"]
      interval: 30s
      timeout: 10s
      retries: 3

  # Redis Cache
  redis:
    image: redis:7-alpine
    ports:
      - "6379:6379"
    volumes:
      - redis_data:/data
    restart: unless-stopped
    networks:
      - football_network
    healthcheck:
      test: ["CMD", "redis-cli", "ping"]
      interval: 30s
      timeout: 10s
      retries: 3

  # Nginx Reverse Proxy
  nginx:
    image: nginx:alpine
    ports:
      - "80:80"
      - "443:443"
    volumes:
      - ./nginx.conf:/etc/nginx/nginx.conf
      - ./ssl:/etc/nginx/ssl
      - app_uploads:/var/www/uploads
    depends_on:
      - app
    restart: unless-stopped
    networks:
      - football_network

  # Development app (comment out for production)
  app-dev:
    build:
      context: .
      target: development
    ports:
      - "5000:5000"
    environment:
      - FLASK_ENV=development
      - SECRET_KEY=dev-secret-key
      - DATABASE_URL=sqlite:///football_dev.db
    volumes:
      - .:/app
      - app_logs:/app/logs
    profiles:
      - dev
    networks:
      - football_network

volumes:
  postgres_data:
  redis_data:
  app_logs:
  app_uploads:

networks:
  football_network:
    driver: bridge